Vagrant.configure("2") do |config|
  config.vm.define "backup" do |backup|
    backup.vm.box = "centos/7"
    backup.vm.hostname = "backup"
    backup.vm.network "private_network", ip: "192.168.11.160"
    backup.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
            sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            systemctl restart sshd
          SHELL
  end


#  config.vm.provision "ansible" do |ansible|
#    ansible.verbose = "v"
#    ansible.playbook = "./ansible/provision-web.yml"
#    ansible.force_remote_user = "vagrant"
#    ansible.become = "true"
#    ansible.inventory_path = "./ansible/hosts"
#  end


  config.vm.define "client" do |client|
    client.vm.box = "centos/7"
    client.vm.hostname = "client"
    client.vm.network "private_network", ip: "192.168.11.150"
    client.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
            sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            systemctl restart sshd
          SHELL
  end


#  config.vm.provision "ansible" do |ansible|
#    ansible.verbose = "v"
#    ansible.playbook = "./ansible/provision-log.yml"
#    ansible.force_remote_user = "vagrant"
#    ansible.become = "true"
#    ansible.inventory_path = "./ansible/hosts"
#  end


end
